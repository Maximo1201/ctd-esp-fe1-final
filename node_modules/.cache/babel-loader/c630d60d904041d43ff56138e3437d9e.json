{"ast":null,"code":"import { fetchEpisodios } from \"../services/personaje.services\";\n\nconst obtenerEpisodio = query => {\n  return {\n    type: \"OBTENER_EPISODIO\",\n    query: query\n  };\n};\n\nconst obtenerEpisodioActionSuccess = episodios => {\n  return {\n    type: \"OBTENER_EPISODIO_SUCCESS\",\n    episodios: episodios\n  };\n};\n\nconst obtenerEpisodioError = mensaje => {\n  return {\n    type: \"OBTENER_EPISODIO_ERROR\",\n    error: mensaje\n  };\n};\n\nexport const obtenerEpisodiosThunk = episodioId => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await fetchEpisodios(episodioId);\n\n      if (response !== undefined) {\n        dispatch(obtenerEpisodioActionSuccess(response));\n      }\n    } catch (e) {\n      dispatch(obtenerEpisodioError(e));\n    }\n  };\n};","map":{"version":3,"sources":["D:/A_Trabajo/A_ESPECIALIDAD DE FRONT/parcial de front/ctd-esp-fe1-final-main/src/actions/episodiosActions.ts"],"names":["fetchEpisodios","obtenerEpisodio","query","type","obtenerEpisodioActionSuccess","episodios","obtenerEpisodioError","mensaje","error","obtenerEpisodiosThunk","episodioId","dispatch","getState","response","undefined","e"],"mappings":"AACA,SAASA,cAAT,QAA+B,gCAA/B;;AAiBA,MAAMC,eAAqD,GAAIC,KAAD,IAAmB;AAC/E,SAAO;AACLC,IAAAA,IAAI,EAAE,kBADD;AAELD,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALD;;AAOA,MAAME,4BAA+E,GACnFC,SADsF,IAEnF;AACH,SAAO;AACLF,IAAAA,IAAI,EAAE,0BADD;AAELE,IAAAA,SAAS,EAAEA;AAFN,GAAP;AAID,CAPD;;AASA,MAAMC,oBAA+D,GACnEC,OADsE,IAEnE;AACH,SAAO;AACLJ,IAAAA,IAAI,EAAE,wBADD;AAELK,IAAAA,KAAK,EAAED;AAFF,GAAP;AAID,CAPD;;AAiBA,OAAO,MAAME,qBAAqB,GAChCC,UADmC,IAEL;AAC9B,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMb,cAAc,CAACU,UAAD,CAArC;;AACA,UAAIG,QAAQ,KAAKC,SAAjB,EAA4B;AAC1BH,QAAAA,QAAQ,CAACP,4BAA4B,CAACS,QAAD,CAA7B,CAAR;AACD;AACF,KALD,CAKE,OAAOE,CAAP,EAAU;AACVJ,MAAAA,QAAQ,CAACL,oBAAoB,CAACS,CAAD,CAArB,CAAR;AACD;AACF,GATD;AAUD,CAbM","sourcesContent":["import { Action, ActionCreator, ThunkAction } from \"@reduxjs/toolkit\";\nimport { fetchEpisodios } from \"../services/personaje.services\";\nimport { IRootState } from \"../store/store\";\nimport Episodio from \"../types/episodio.types\";\n\ninterface obtenerEpisodioAction extends Action {\n  type: \"OBTENER_EPISODIO\";\n  query: string;\n}\ninterface obtenerEpisodioActionSuccessAction extends Action {\n  type: \"OBTENER_EPISODIO_SUCCESS\";\n  episodios: Episodio | Episodio[];\n}\ninterface obtenerEpisodioErrorAction extends Action {\n  type: \"OBTENER_EPISODIO_ERROR\";\n  error: string;\n}\n\nconst obtenerEpisodio: ActionCreator<obtenerEpisodioAction> = (query: string) => {\n  return {\n    type: \"OBTENER_EPISODIO\",\n    query: query,\n  };\n};\n\nconst obtenerEpisodioActionSuccess: ActionCreator<obtenerEpisodioActionSuccessAction> = (\n  episodios: Episodio | Episodio[]\n) => {\n  return {\n    type: \"OBTENER_EPISODIO_SUCCESS\",\n    episodios: episodios,\n  };\n};\n\nconst obtenerEpisodioError: ActionCreator<obtenerEpisodioErrorAction> = (\n  mensaje: string\n) => {\n  return {\n    type: \"OBTENER_EPISODIO_ERROR\",\n    error: mensaje,\n  };\n};\n\nexport type EpisodiosActions =\n  | ReturnType<typeof obtenerEpisodio>\n  | ReturnType<typeof obtenerEpisodioActionSuccess>\n  | ReturnType<typeof obtenerEpisodioError>;\n\ninterface FetchEpisodiosThunkAction\n  extends ThunkAction<void, IRootState, unknown, EpisodiosActions> {}\n\nexport const obtenerEpisodiosThunk = (\n  episodioId: (string | undefined)[]\n): FetchEpisodiosThunkAction => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await fetchEpisodios(episodioId);\n      if (response !== undefined) {\n        dispatch(obtenerEpisodioActionSuccess(response));\n      }\n    } catch (e) {\n      dispatch(obtenerEpisodioError(e));\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}