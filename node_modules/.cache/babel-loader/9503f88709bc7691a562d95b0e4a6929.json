{"ast":null,"code":"const initialState = {\n  favoritosMapa: new Map()\n};\n\nconst favoritosReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"TOGGLE_FAVORITO\":\n      const map = new Map();\n      state.favoritosMapa.forEach(personaje => {\n        map.set(personaje.id, personaje);\n      });\n      state.favoritosMapa.has(action.personaje.id) ? map.delete(action.personaje.id) : map.set(action.personaje.id, action.personaje);\n      return { ...state,\n        favoritosMapa: map\n      };\n\n    case \"REMOVE_ALL_FAVORITO\":\n      return { ...initialState\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport default favoritosReducer;","map":{"version":3,"sources":["D:/A_Trabajo/A_ESPECIALIDAD DE FRONT/parcial de front/ctd-esp-fe1-final-main/src/reducers/favoritosReducer.ts"],"names":["initialState","favoritosMapa","Map","favoritosReducer","state","action","type","map","forEach","personaje","set","id","has","delete"],"mappings":"AAQA,MAAMA,YAA4B,GAAG;AACnCC,EAAAA,aAAa,EAAE,IAAIC,GAAJ;AADoB,CAArC;;AAIA,MAAMC,gBAA0D,GAAG,YAG9C;AAAA,MAFnBC,KAEmB,uEAFXJ,YAEW;AAAA,MADnBK,MACmB;;AACnB,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,YAAMC,GAAG,GAAG,IAAIL,GAAJ,EAAZ;AACAE,MAAAA,KAAK,CAACH,aAAN,CAAoBO,OAApB,CAA6BC,SAAD,IAAe;AACzCF,QAAAA,GAAG,CAACG,GAAJ,CAAQD,SAAS,CAACE,EAAlB,EAAsBF,SAAtB;AACD,OAFD;AAIAL,MAAAA,KAAK,CAACH,aAAN,CAAoBW,GAApB,CAAwBP,MAAM,CAACI,SAAP,CAAiBE,EAAzC,IACIJ,GAAG,CAACM,MAAJ,CAAWR,MAAM,CAACI,SAAP,CAAiBE,EAA5B,CADJ,GAEIJ,GAAG,CAACG,GAAJ,CAAQL,MAAM,CAACI,SAAP,CAAiBE,EAAzB,EAA6BN,MAAM,CAACI,SAApC,CAFJ;AAGA,aAAO,EACL,GAAGL,KADE;AAELH,QAAAA,aAAa,EAAEM;AAFV,OAAP;;AAKF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGP;AADE,OAAP;;AAGF;AACE,aAAO,EAAE,GAAGI;AAAL,OAAP;AApBJ;AAsBD,CA1BD;;AA4BA,eAAeD,gBAAf","sourcesContent":["import { Reducer } from \"@reduxjs/toolkit\";\nimport { FavoritoActions } from \"../actions/favoritosAction\";\nimport Personaje from \"../types/personaje.types\";\n\ninterface StateFavoritos {\n  favoritosMapa: Map<number, Personaje>;\n}\n\nconst initialState: StateFavoritos = {\n  favoritosMapa: new Map(),\n};\n\nconst favoritosReducer: Reducer<StateFavoritos, FavoritoActions> = (\n  state = initialState,\n  action\n): StateFavoritos => {\n  switch (action.type) {\n    case \"TOGGLE_FAVORITO\":\n      const map = new Map<number, Personaje>();\n      state.favoritosMapa.forEach((personaje) => {\n        map.set(personaje.id, personaje);\n      });\n\n      state.favoritosMapa.has(action.personaje.id)\n        ? map.delete(action.personaje.id)\n        : map.set(action.personaje.id, action.personaje);\n      return {\n        ...state,\n        favoritosMapa: map,\n      };\n\n    case \"REMOVE_ALL_FAVORITO\":\n      return {\n        ...initialState,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default favoritosReducer;"]},"metadata":{},"sourceType":"module"}