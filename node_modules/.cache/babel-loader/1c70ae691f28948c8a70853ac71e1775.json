{"ast":null,"code":"import { filtrarPersonajesAPI, cambiarPagina } from \"../services/personaje.services\";\nexport const filtrarPersonajesThunk = query => {\n  return async (dispatch, getState) => {\n    getState();\n    dispatch(filtrarPersonajes(query));\n\n    try {\n      const response = await filtrarPersonajesAPI(query);\n      const [personajes, info, status] = response;\n\n      if (status === 200) {\n        dispatch(filtrarPersonajesSuccessAction(personajes, info));\n      } else {\n        dispatch(filtrarPersonajesErrorAction(status));\n      }\n    } catch (e) {\n      dispatch(filtrarPersonajesErrorAction(e));\n    }\n  };\n};\nexport const cambiarPaginaThunk = url => {\n  return async (dispatch, getState) => {\n    getState();\n\n    try {\n      const [personajes, info] = await cambiarPagina(url);\n      dispatch(filtrarPersonajesSuccessAction(personajes, info));\n    } catch (e) {\n      dispatch(filtrarPersonajesErrorAction(e));\n    }\n  };\n};\nexport const filtrarPersonajes = query => {\n  return {\n    type: \"FILTRAR_PERSONAJES\",\n    query: query\n  };\n};\nexport const filtrarPersonajesSuccessAction = (personajes, paginaInfo) => {\n  return {\n    type: \"FILTRAR_PERSONAJES_SUCCESS\",\n    personajes: personajes,\n    paginaInfo: paginaInfo\n  };\n};\nexport const filtrarPersonajesErrorAction = mensaje => {\n  return {\n    type: \"FILTRAR_PERSONAJES_ERROR\",\n    mensaje: mensaje\n  };\n};","map":{"version":3,"sources":["C:/Users/toled/OneDrive/Documentos/GitHub/ctd-esp-fe1-final/src/actions/personajesActions.ts"],"names":["filtrarPersonajesAPI","cambiarPagina","filtrarPersonajesThunk","query","dispatch","getState","filtrarPersonajes","response","personajes","info","status","filtrarPersonajesSuccessAction","filtrarPersonajesErrorAction","e","cambiarPaginaThunk","url","type","paginaInfo","mensaje"],"mappings":"AACA,SAASA,oBAAT,EAA+BC,aAA/B,QAAoD,gCAApD;AAwBA,OAAO,MAAMC,sBAAsB,GACjCC,KADoC,IAET;AAC3B,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnCA,IAAAA,QAAQ;AACRD,IAAAA,QAAQ,CAACE,iBAAiB,CAACH,KAAD,CAAlB,CAAR;;AACA,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMP,oBAAoB,CAACG,KAAD,CAA3C;AACA,YAAM,CAACK,UAAD,EAAaC,IAAb,EAAmBC,MAAnB,IAA6BH,QAAnC;;AACA,UAAIG,MAAM,KAAK,GAAf,EAAoB;AAClBN,QAAAA,QAAQ,CAACO,8BAA8B,CAACH,UAAD,EAAaC,IAAb,CAA/B,CAAR;AACD,OAFD,MAEO;AACLL,QAAAA,QAAQ,CAACQ,4BAA4B,CAACF,MAAD,CAA7B,CAAR;AACD;AACF,KARD,CAQE,OAAOG,CAAP,EAAU;AACVT,MAAAA,QAAQ,CAACQ,4BAA4B,CAACC,CAAD,CAA7B,CAAR;AACD;AACF,GAdD;AAeD,CAlBM;AAoBP,OAAO,MAAMC,kBAAkB,GAAIC,GAAD,IAAyC;AACvE,SAAO,OAAOX,QAAP,EAAiBC,QAAjB,KAA8B;AACnCA,IAAAA,QAAQ;;AACR,QAAI;AACF,YAAM,CAACG,UAAD,EAAaC,IAAb,IAAqB,MAAMR,aAAa,CAACc,GAAD,CAA9C;AACAX,MAAAA,QAAQ,CAACO,8BAA8B,CAACH,UAAD,EAAaC,IAAb,CAA/B,CAAR;AACD,KAHD,CAGE,OAAOI,CAAP,EAAU;AACVT,MAAAA,QAAQ,CAACQ,4BAA4B,CAACC,CAAD,CAA7B,CAAR;AACD;AACF,GARD;AASD,CAVI;AAYP,OAAO,MAAMP,iBAAyD,GACpEH,KADuE,IAEpE;AACH,SAAO;AACLa,IAAAA,IAAI,EAAE,oBADD;AAELb,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CAPM;AASP,OAAO,MAAMQ,8BAEZ,GAAG,CAACH,UAAD,EAA0BS,UAA1B,KAAqD;AACvD,SAAO;AACLD,IAAAA,IAAI,EAAE,4BADD;AAELR,IAAAA,UAAU,EAAEA,UAFP;AAGLS,IAAAA,UAAU,EAAEA;AAHP,GAAP;AAKD,CARM;AAUP,OAAO,MAAML,4BAEZ,GAAIM,OAAD,IAA8B;AAChC,SAAO;AACLF,IAAAA,IAAI,EAAE,0BADD;AAELE,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CAPM","sourcesContent":["import { Action, ActionCreator, ThunkAction } from \"@reduxjs/toolkit\";\r\nimport { filtrarPersonajesAPI, cambiarPagina } from \"../services/personaje.services\";\r\nimport { IRootState } from \"../store/store\";\r\nimport PaginaInfo from \"../types/infoPagina.types\";\r\nimport Personaje from \"../types/personaje.types\";\r\n\r\nexport interface FiltrarPersonajesAction extends Action {\r\n  type: \"FILTRAR_PERSONAJES\";\r\n  query: string;\r\n}\r\n\r\nexport interface FiltrarPersonajesSuccessAction extends Action {\r\n  type: \"FILTRAR_PERSONAJES_SUCCESS\";\r\n  personajes: Personaje[];\r\n  paginaInfo: PaginaInfo;\r\n}\r\n\r\nexport interface FiltrarPersonajesErrorAction extends Action {\r\n  type: \"FILTRAR_PERSONAJES_ERROR\";\r\n  mensaje: string | number;\r\n}\r\n\r\nexport interface FiltrarPersonajesThunk\r\n  extends ThunkAction<void, IRootState, unknown, PersonajeActions> {}\r\n\r\nexport const filtrarPersonajesThunk = (\r\n  query: string\r\n): FiltrarPersonajesThunk => {\r\n  return async (dispatch, getState) => {\r\n    getState();\r\n    dispatch(filtrarPersonajes(query));\r\n    try {\r\n      const response = await filtrarPersonajesAPI(query);\r\n      const [personajes, info, status] = response;\r\n      if (status === 200) {\r\n        dispatch(filtrarPersonajesSuccessAction(personajes, info));\r\n      } else {\r\n        dispatch(filtrarPersonajesErrorAction(status));\r\n      }\r\n    } catch (e) {\r\n      dispatch(filtrarPersonajesErrorAction(e));\r\n    }\r\n  };\r\n};\r\n\r\nexport const cambiarPaginaThunk = (url: string): FiltrarPersonajesThunk => {\r\n    return async (dispatch, getState) => {\r\n      getState();\r\n      try {\r\n        const [personajes, info] = await cambiarPagina(url);\r\n        dispatch(filtrarPersonajesSuccessAction(personajes, info));\r\n      } catch (e) {\r\n        dispatch(filtrarPersonajesErrorAction(e));\r\n      }\r\n    };\r\n  };\r\n\r\nexport const filtrarPersonajes: ActionCreator<FiltrarPersonajesAction> = (\r\n  query: string\r\n) => {\r\n  return {\r\n    type: \"FILTRAR_PERSONAJES\",\r\n    query: query,\r\n  };\r\n};\r\n\r\nexport const filtrarPersonajesSuccessAction: ActionCreator<\r\n  FiltrarPersonajesSuccessAction\r\n> = (personajes: Personaje[], paginaInfo: PaginaInfo) => {\r\n  return {\r\n    type: \"FILTRAR_PERSONAJES_SUCCESS\",\r\n    personajes: personajes,\r\n    paginaInfo: paginaInfo,\r\n  };\r\n};\r\n\r\nexport const filtrarPersonajesErrorAction: ActionCreator<\r\n  FiltrarPersonajesErrorAction\r\n> = (mensaje: string | number) => {\r\n  return {\r\n    type: \"FILTRAR_PERSONAJES_ERROR\",\r\n    mensaje: mensaje,\r\n  };\r\n};\r\n\r\nexport type PersonajeActions =\r\n  | ReturnType<typeof filtrarPersonajes>\r\n  | ReturnType<typeof filtrarPersonajesSuccessAction>\r\n  | ReturnType<typeof filtrarPersonajesErrorAction>;\r\n"]},"metadata":{},"sourceType":"module"}